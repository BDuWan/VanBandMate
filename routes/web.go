package routes

import (
	"lms/controllers"

	"github.com/gofiber/fiber/v2"
)

func RouteInit(app *fiber.App) {
	app.Use(func(c *fiber.Ctx) error {
		if c.Method() == "POST" {
			method := c.FormValue("_method")

			switch method {
			case "DELETE":
				c.Method("DELETE")
			case "PUT":
				c.Method("PUT")
			}
		}
		return c.Next()
	})

	app.Get("/", controllers.GetLogin)
	app.Get("/login", controllers.GetLogin)
	app.Get("/signup", controllers.GetSignup)
	app.Get("/signup_sale", controllers.GetSignupSale)
	app.Get("/logout", controllers.GetLogout)
	app.Post("/login", controllers.PostLogin)
	app.Post("/forgot-password", controllers.CreateNewPass)
	app.Post("/signup", controllers.PostSignup)
	//app.Get("/verify", controllers.VerifyHandler)
	//
	//app.Get("/notify", controllers.Notification)
	//app.Get("/ws", IsAuthenticated, CheckSession, websocket.New(controllers.WebSK))

	//app.Put("/home/update", controllers.PutUpdateUserInformation)
	home := app.Group("/home", IsAuthenticated, CheckSession, CheckPerHome)
	//home.Get("/information", controllers.GetInformation)
	//home.Get("/changePassword", controllers.GetChangePassword)
	home.Get("", controllers.GetHome)
	home.Post("/create", controllers.PostStudyProgram)
	//home.Post("/send-verify-email", controllers.PostVerifyEmail)
	//home.Put("/update", controllers.PutUpdateUserInformation)
	//home.Put("/changePassword", controllers.PutChangePassword)

	//dashboard := app.Group("/dashboard", IsAuthenticated, CheckSession, CheckPerDashboard, CheckVerify)

	//home.Put("/update", controllers.UpdateUserInformation)

	//dashboard := app.Group("/dashboard", IsAuthenticated, CheckSession, CheckPerDashboard)
	//dashboard.Get("", controllers.GetDashboard)

	// courses := app.Group("/courses", IsAuthenticated, CheckSession, CheckPerCourses, CheckVerify)
	// courses.Get("", controllers.GetCourses)
	// courses.Get("/:id", controllers.GetCourseID)
	// courses.Post("/create", controllers.PostCourse)

	studyPrograms := app.Group("/study-programs", IsAuthenticated, CheckSession, CheckPerCourses, CheckVerify)
	studyPrograms.Get("", controllers.GetStudyPrograms)
	studyPrograms.Get("/:id", controllers.GetStudyProgramID)
	studyPrograms.Post("/create", controllers.PostCourse)

	courses := app.Group("/courses", IsAuthenticated, CheckSession, CheckPerCourses, CheckVerify)
	courses.Get("", controllers.GetCourses)
	courses.Get("/:id", controllers.GetCourseID)
	courses.Get("/create/document/:id", controllers.GetCreateDocumentCourse)
	courses.Get("/create/lesson/:id", controllers.GetCreateLessonCourse)
	courses.Get("/create/assignment/:id", controllers.GetCreateAssignmentCourse)
	courses.Get("/create/:id", controllers.GetCreateCourse)
	courses.Get("/edit/:id", controllers.GetEditCourse)
	courses.Get("/assignment/:id", controllers.GetAssignmentCourseID)
	courses.Get("/assignment/user/:id/:uid", controllers.GetAssignmentUserCourseID)
	courses.Get("/document/edit/:id", controllers.GetEditDocumentCourseID)
	courses.Get("/lesson/:id", controllers.GetInfoLessonCourseID)
	courses.Get("/lesson/edit/:id", controllers.GetEditLessonCourseID)
	courses.Get("/assignment/edit/:id", controllers.GetEditAssignmentCourseID)
	courses.Get("/download/document/:id", controllers.GetDownloadDocumentCourseID)
	courses.Get("/download/fileUser/:id", controllers.GetDownloadFileUserCourseID)
	courses.Get("/api/comments/:id", controllers.APIGetComment)
	courses.Post("/document/:id", controllers.PostCreateDocumentCourseID)
	courses.Post("/lesson/:id", controllers.PostCreateLessonCourseID)
	courses.Post("/assignment/:id", controllers.PostCreateAssignmentCourseID)
	courses.Post("/api/students/:id", controllers.APIPostStudentCourseID)
	courses.Post("/api/documents/:id", controllers.APIPostDocumentCourseID)
	courses.Post("/api/lessons/:id", controllers.APIPostLessonCourseID)
	courses.Post("/api/assignments/:id", controllers.APIPostAssignmentCourseID)
	courses.Post("/api/listUser/assignments/:id", controllers.APIPostListUserAssignmentCourseID)
	courses.Post("/api/files/:id/:uid", controllers.APIPostFileUserAssignmentID)
	courses.Post("/api/comments", controllers.APIAddComment)
	courses.Post("/api/comments/reply", controllers.APIAddCommentReply)
	courses.Post("/fileUser/upload/assignment", controllers.PostFileUserAssignmentCourseID)
	courses.Post("/submit/assignment", controllers.PostSubmitAssignmentCourseID)
	courses.Post("/create", controllers.PostCreateCourse)
	courses.Delete("/document/:id", controllers.DeleteDocumentCourseID)
	courses.Delete("/fileUser/:id", controllers.DeleteFileUserCourseID)
	courses.Delete("/lesson/:id", controllers.DeleteLessonCourseID)
	courses.Delete("/assignment/:id", controllers.DeleteAssignmentCourseID)
	courses.Delete("/:id", controllers.DeleteMngCourseID)
	courses.Put("/document/:id", controllers.UpdateDocumentCourseID)
	courses.Put("/lesson/:id", controllers.UpdateLessonCourseID)
	courses.Put("/assignment/:id", controllers.UpdateAssignmentCourseID)
	courses.Put("/rollback/assignment/:id", controllers.UpdateRollbackAssignmentCourseID)
	courses.Put("/result/assignment", controllers.UpdateResultAssignmentCourseID)
	courses.Put("/edit/:id", controllers.UpdateCourse)

	managements := app.Group("/managements", IsAuthenticated, CheckSession, CheckVerify)

	mngInstructors := managements.Group("/instructors", CheckPerMngInstructors)
	mngInstructors.Get("", controllers.GetMngInstructors)
	mngInstructors.Get("/:id", controllers.GetMngInstructorID)
	mngInstructors.Get("/create/study-program/:id", controllers.GetCreateMngInstructorsStudyProgram)
	mngInstructors.Get("/create/course/:id", controllers.GetCreateMngInstructorsCourse)
	mngInstructors.Get("/select/course/:id", controllers.GetSelectMngInstructorsCourse)
	mngInstructors.Get("/edit/course/:id", controllers.GetEditMngInstructorCourse)
	mngInstructors.Post("/api", controllers.APIPostMngInstructors)
	mngInstructors.Post("/api/study-programs/:id", controllers.APIPostMngStudyProgramsInstructorID)
	mngInstructors.Post("/api/courses/:id", controllers.APIPostMngCoursesInstructorID)
	mngInstructors.Post("/create/study-program", controllers.PostCreateMngInstructorsStudyProgram)
	mngInstructors.Post("/create/course", controllers.PostCreateMngInstructorsCourse)
	mngInstructors.Delete("/study-programs/:id", controllers.DeleteMngInstructorStudyProgramID)
	mngInstructors.Delete("/courses/:id", controllers.DeleteMngInstructorCourseID)
	mngInstructors.Put("/edit/course/:id", controllers.UpdateMngInstructorCourse)

	//mngStudents := managements.Group("/students", CheckPerMngStudents)
	//mngStudents.Get("", controllers.GetMngStudents)
	//mngStudents.Post("/api", controllers.APIPostMngStudents)
	//mngStudents.Get("/:id", controllers.GetMngStudentID)
	//mngStudents.Put("/confirm-payment/:id", controllers.PostConfirmPaymentStudent)
	//mngStudents.Post("/api/courses/:id", controllers.APIPostMngCoursesStudentID)
	//mngStudents.Post("/api/assignments/:id", controllers.APIPostAssignmentStudentID)
	//mngStudents.Post("/api/courses/:id", controllers.APIPostMngCoursesStudentID)

	//mngSaleBusiness := managements.Group("/sale-business", CheckPerMngSaleBusiness)
	//mngSaleBusiness.Get("", controllers.GetMngSaleBusiness)
	//mngSaleBusiness.Get("/:id", controllers.GetMngSaleBusinessID)
	//mngSaleBusiness.Get("/payments/create/:id", controllers.GetMngCreatePaymentSaleBusiness)
	////mngSaleBusiness.Get("/payments/edit/:id", controllers.GetMngEditPaymentSaleBusiness)
	//mngSaleBusiness.Post("/api", controllers.APIPostMngSaleBusiness)
	//mngSaleBusiness.Post("/payments/edit", controllers.PostMngEditPaymentSaleBusiness)
	//mngSaleBusiness.Post("/payments/create", controllers.PostMngCreatePaymentSaleBusiness)
	//mngSaleBusiness.Post("/api/payments/:id", controllers.APIPostPaymentsMngSaleBusinessID)
	//mngSaleBusiness.Post("/api/history-pay/:id", controllers.APIPostHistoryPayMngSaleBusinessID)
	//mngSaleBusiness.Post("/api/history-gain/:id", controllers.APIPostHistoryGainMngSaleBusinessID)
	//mngSaleBusiness.Post("/api/students/:id", controllers.APIPostStudentMngSaleBusinessID)
	//mngSaleBusiness.Post("/api/periods/:id", controllers.APIPostPeriodMngSaleBusinessID)
	//mngSaleBusiness.Post("/api/instructors/:id", controllers.APIPostInstructorMngSaleBusinessID)
	//mngSaleBusiness.Delete("/payments/:id", controllers.DeleteMngSaleBusinessPaymentID)

	// mngCourses := managements.Group("/mng-courses", CheckPerMngCourses)
	// mngCourses.Get("", controllers.GetMngCourses)
	// mngCourses.Get("/create", controllers.GetCreateMngCourse)
	// mngCourses.Get("/:id", controllers.GetMngCourseID)
	// mngCourses.Post("", controllers.PostCreateMngCourse)
	// mngCourses.Post("/api", controllers.APIPostMngCourses)
	// mngCourses.Delete("/:id", controllers.DeleteMngCourseID)
	// mngCourses.Put("/:id", controllers.UpdateMngCourseID)

	mngStudyProgram := managements.Group("/mng-study-programs", CheckPerMngCourses)
	mngStudyProgram.Get("", controllers.GetMngStudyPrograms)
	mngStudyProgram.Get("/create", controllers.GetCreateMngStudyProgram)
	mngStudyProgram.Get("/:id", controllers.GetMngStudyProgramID)
	mngStudyProgram.Post("", controllers.PostCreateMngStudyProgram)
	mngStudyProgram.Post("/api", controllers.APIPostMngStudyPrograms)
	mngStudyProgram.Delete("/:id", controllers.DeleteMngStudyProgramID)
	mngStudyProgram.Put("/:id", controllers.UpdateMngStudyProgramID)

	mngCourses := managements.Group("/mng-courses", CheckPerMngCourses)
	mngCourses.Get("", controllers.GetMngCourses)
	mngCourses.Get("/create", controllers.GetCreateMngCourse)
	mngCourses.Get("/create/document/:id", controllers.GetCreateDocumentMngCourse)
	mngCourses.Get("/create/lesson/:id", controllers.GetCreateLessonMngCourse)
	mngCourses.Get("/:id", controllers.GetMngCourseID)
	mngCourses.Get("/edit/:id", controllers.GetMngEditCourseID)
	mngCourses.Get("/document/edit/:id", controllers.GetEditDocumentMngCourseID)
	mngCourses.Get("/lesson/edit/:id", controllers.GetEditLessonMngCourseID)
	mngCourses.Get("/download/document/:id", controllers.GetDownloadMngDocumentCourseID)
	mngCourses.Get("/download/fileUser/:id", controllers.GetDownloadFileUserCourseID)
	mngCourses.Get("/assignment/edit/:id", controllers.GetMngEditAssignmentCourseID)
	mngCourses.Get("/assignment/:id", controllers.GetMngAssignmentCourseID)
	mngCourses.Get("/assignment/user/:id/:uid", controllers.GetMngAssignmentUserCourseID)
	mngCourses.Get("/create/assignment/:id", controllers.GetMngCreateAssignmentCourse)
	mngCourses.Get("/api/comments/:id", controllers.APIGetComment)
	mngCourses.Post("", controllers.PostCreateMngCourse)
	mngCourses.Post("/document/:id", controllers.PostCreateDocumentMngCourseID)
	mngCourses.Post("/lesson/:id", controllers.PostCreateLessonMngCourseID)
	mngCourses.Post("/api", controllers.APIPostMngCourses)
	mngCourses.Post("/api/students/:id", controllers.APIPostStudentMngCourseID)
	mngCourses.Post("/api/documents/:id", controllers.APIPostDocumentMngCourseID)
	mngCourses.Post("/api/lessons/:id", controllers.APIPostLessonMngCourseID)
	mngCourses.Post("/api/assignments/:id", controllers.APIPostAssignmentCourseID)
	mngCourses.Post("/api/listUser/assignments/:id", controllers.APIPostListUserAssignmentCourseID)
	mngCourses.Post("/assignment/:id", controllers.PostCreateAssignmentCourseID)
	mngCourses.Post("/api/files/:id/:uid", controllers.APIPostFileUserAssignmentID)
	mngCourses.Post("/api/comments", controllers.APIAddComment)
	mngCourses.Post("/api/comments/reply", controllers.APIAddCommentReply)
	mngCourses.Delete("/:id", controllers.DeleteMngCourseID)
	mngCourses.Delete("/document/:id", controllers.DeleteDocumentMngCourseID)
	mngCourses.Delete("/lesson/:id", controllers.DeleteLessonMngCourseID)
	mngCourses.Delete("/assignment/:id", controllers.DeleteAssignmentCourseID)
	mngCourses.Put("/:id", controllers.UpdateMngCourseID)
	mngCourses.Put("/document/:id", controllers.UpdateDocumentMngCourseID)
	mngCourses.Put("/lesson/:id", controllers.UpdateLessonMngCourseID)
	mngCourses.Put("/assignment/:id", controllers.UpdateAssignmentCourseID)
	mngCourses.Put("/rollback/assignment/:id", controllers.UpdateRollbackAssignmentCourseID)
	mngCourses.Put("/result/assignment", controllers.UpdateResultAssignmentCourseID)

	//mngPayments := managements.Group("/mng-payments", CheckPerMngPayments)
	//mngPayments.Get("", controllers.GetMngPayments)
	//mngPayments.Get("/prices/create", controllers.GetPaymentCreatePrice)
	//mngPayments.Get("/prices/:id", controllers.GetMngPaymentsPriceID)
	//mngPayments.Get("/pro-sales/:id/:uid", controllers.GetPaymentCreatePriceSaleID)
	//mngPayments.Get("/config", controllers.GetPaymentConfig)
	//mngPayments.Post("/prices", controllers.PostPaymentCreatePrice)
	//mngPayments.Post("/api/prices", controllers.APIPostPaymentPrices)
	//mngPayments.Post("/api/sales", controllers.APIPostPaymentSales)
	//mngPayments.Post("/api/history", controllers.APIPostPaymentHistory)
	//mngPayments.Post("/api/students", controllers.APIPostPaymentStudent)
	//mngPayments.Post("/api/periods", controllers.APIPostPaymentPeriod)
	//mngPayments.Post("/api/history-pay", controllers.APIPostPaymentHistoryPay)
	//mngPayments.Post("/api/pro-sales", controllers.APIPostPaymentProSales)
	//mngPayments.Post("/pro-sales", controllers.PostPaymentCreatePriceSaleID)
	//mngPayments.Put("/config", controllers.UpdateMngPaymentsConfig)
	//mngPayments.Put("/prices/:id", controllers.UpdateMngPaymentsPriceID)
	//mngPayments.Delete("/prices/:id", controllers.DeletePaymentPriceID)

	accounts := app.Group("/accounts", IsAuthenticated, CheckSession, CheckVerify)

	accUsers := accounts.Group("/users", CheckPerAccUsers)
	accUsers.Get("", controllers.GetAccUsers)
	accUsers.Get("/create", controllers.GetAccCreateUser)
	accUsers.Get("/:id", controllers.GetAccUserID)
	accUsers.Post("", controllers.PostAccCreateUser)
	accUsers.Post("/api/admin", controllers.APIPostAccUserAdmin)
	accUsers.Post("/api/sales", controllers.APIPostAccUserSales)
	accUsers.Post("/api/business", controllers.APIPostAccUserBusiness)
	accUsers.Post("/api/instructors", controllers.APIPostAccUserInstructors)
	accUsers.Post("/api/students", controllers.APIPostAccUserStudents)
	accUsers.Delete("/:id", controllers.DeleteAccUserID)
	accUsers.Put("/:id", controllers.UpdateAccUserID)
	accUsers.Put("/state/:id", controllers.UpdateAccStateUser)

	accRoles := accounts.Group("/roles", CheckPerAccRoles)
	accRoles.Get("", controllers.GetAccRoles)
	accRoles.Get("/create", controllers.GetAccCreateRole)
	accRoles.Get("/:id", controllers.GetAccRoleID)
	accRoles.Post("", controllers.PostAccCreateRole)
	accRoles.Post("/api", controllers.APIPostAccRoles)
	accRoles.Delete("/:id", controllers.DeleteAccRoleID)
	accRoles.Put("/:id", controllers.UpdateAccRoleID)

	errors := app.Group("/errors", IsAuthenticated, CheckSession)
	errors.Get("/403", controllers.GetError403)
	errors.Get("/401", controllers.GetError401)
	errors.Get("/404", controllers.GetError404)
}
